/*
* Project Name: Nokia  5110 Graphic library for PIC  micro-controller
* File: NOKIA5110_PCD8544.h 
* Description: Header file for NOKIA 5110 library to communicate with LCD
* Author: Gavin Lyons.
* Description: See URL for full details.
* URL: https://github.com/gavinlyonsrepo/pic_18F47K42_projects
*/

#ifndef NOKIA_5110_H
#define NOKIA_5110_H

/* -------- libraries -------- */
#include <stdint.h>
#include <stdbool.h>
#include "mcc_generated_files/mcc.h"

/* ------ Definitions ------ */

#define LCD_BLACK 1
#define LCD_WHITE 0

#define LCDWIDTH  84
#define LCDHEIGHT 48

#define LCD_POWERDOWN            0x04
#define LCD_ENTRYMODE            0x02
#define LCD_EXTENDEDINSTRUCTION  0x01

#define LCD_DISPLAYBLANK         0x00
#define LCD_DISPLAYNORMAL        0x04
#define LCD_DISPLAYALLON         0x01
#define LCD_DISPLAYINVERTED      0x05

#define LCD_FUNCTIONSET          0x20
#define LCD_DISPLAYCONTROL       0x08
#define LCD_SETYADDR             0x40
#define LCD_SETXADDR             0x80

#define LCD_SETTEMP  0x04
#define LCD_SETBIAS  0x13
#define LCD_SETVOP   0x80

#define LCD_HIGH_FREQ_uSDELAY 1 // US delay used in software SPI , increase for higher MCU freq 

/* --------------- User Functions ------------- */
void LCDBegin(void);
void LCDdrawPixel(int16_t x, int16_t y, bool color);

void LCDsetRotation(uint8_t m);
void LCDdisplay_setContrast(uint8_t con);
void LCDdisplay(void);
void LCDdisplayClear(void);
void LCDfillScreen(void);
void LCDinvertDisplay(bool inv);
void LCDenableSleep(void);
void LCDdisableSleep(void);

/* ------------- Non User Functions --------- */
void LCDWriteData(uint8_t d);
void LCDwriteCommand(uint8_t c);

/* ----------- Variables --------- */
#define _swap_int8_t_LCD(a, b) { uint8_t t = a; a = b; b = t; }
#define _swap_int16_t_LCD(a, b) { int16_t t = a; a = b; b = t; }

uint8_t _width_LCD;
uint8_t _height_LCD; 
uint8_t _rotation_LCD;
bool	_sleep_LCD;

// Memory buffer for the LCD : GL in sig
uint8_t pcd8544_buffer[LCDWIDTH * LCDHEIGHT / 8] = {
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x3f, 0x3f, 0x1f, 0x1f, 0x0f, 0x8f, 
0x8f, 0x8f, 0x8f, 0x8f, 0x8f, 0x8f, 0x8f, 0x8f, 0x8f, 0x8f, 0x8f, 0x8f, 0x1f, 0x1f, 0x1f, 0xbf, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x0f, 0x07, 0xef, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x1f, 0x07, 0x01, 0xc0, 0xf8, 0xfc, 0xfe, 
0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0x00, 0x00, 0xf8, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 
0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0x07, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xfe, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf0, 
0xf0, 0xf0, 0xf0, 0xe0, 0xe2, 0xc6, 0x8e, 0x1e, 0x3e, 0x7e, 0xfe, 0xfe, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0x01, 0x00, 0xf8, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xfe, 0xf8, 0xf0, 0xc1, 0x87, 0x0f, 0x1f, 0x3f, 0x7f, 0x7f, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x1f, 0x0f, 0x87, 0xc6, 0xe0, 0xe0, 0xf0, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x3f, 0x1f, 0x1f, 0x1f, 
0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0xbf, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xfc, 
0xfc, 0xfc, 0xfc, 0xf8, 0xf8, 0xf9, 0xf1, 0xf1, 0xe3, 0xe3, 0xe3, 0xc7, 0xc7, 0xc7, 0xc7, 0xc7, 
0xc7, 0xc7, 0xc7, 0xc7, 0xc7, 0xc7, 0xc7, 0xc7, 0xc7, 0xc3, 0xe1, 0xf0, 0xfc, 0xfe, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xfc, 0xfe, 
0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

#endif
